This is the example application of my blog entry, forked from a great developer that i admire a lot, Petri Kainulainen:

Creating Hadoop MapReduce Jobs with Spring Data Apache Hadoop

http://aironman2k.wordpress.com/2014/08/13/about-how-to-use-spring-data-hadoop/

You might also want to read:

Install and Configure Apache Hadoop to Run in a Pseudo-Distributed Mode
http://www.petrikainulainen.net/programming/apache-hadoop/install-and-configure-apache-hadoop-to-run-in-a-pseudo-distributed-mode/

RUNNING THE APPLICATION

- Install Java (http://java.sun.com)
- Download and install Maven 3 (http://maven.apache.org/download.html#Installation). If you
  have already installed Maven 3, you can skip this step.
- Install Apache Hadoop and Configure it to run in pseudo-distributed model.
- Go to the root directory of project (The one which contains the pom.xml file)
- Create the input directory to HDFS and move the files found from etc directory to that directory.
- Configure the input and output directories found from application.properties file.
- Run command mvn clean assembly:assembly
- Go to the target directory
- Unzip the my-spring-data-mapreduce-bin.zip to the preferred directory
- Go to that directory
- Run the startup script (startup.bat or startup.sh)


TODO list:
	get the code from https://github.com/alonsoir/mrDominioRegistrador, the map reduce classes DONE,
	mrunit test PENDING
	to update library versions PENDING
